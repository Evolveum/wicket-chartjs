/*
 * Copyright (c) 2024 Evolveum
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

def verbose = params.VERBOSE ?: '0'

podTemplate(
        nodeSelector: params.NODE_SELECTOR,
        activeDeadlineSeconds: 900,
        idleMinutes: 1,
        // Secret volume with maven settings.xml for deploy, see also sim-link in "build" stage.
        volumes: [secretVolume(secretName: "jenkins-nexus", mountPath: "/root/jenkins-nexus")],
        workspaceVolume: dynamicPVC(requestsSize: "5Gi"),
        containers: [
                containerTemplate(name: 'jnlp',
                        image: 'jenkins/inbound-agent:4.13-2-alpine',
                        runAsUser: '0',
                        resourceRequestCpu: '1',
                        resourceLimitCpu: '1',
                        resourceRequestMemory: '1Gi',
                        resourceLimitMemory: '1Gi'),
                containerTemplate(name: 'maven',
                        image: params.BUILDER_IMAGE ?: 'maven:3.8.5-openjdk-17',
                        runAsUser: '0',
                        ttyEnabled: true,
                        command: 'cat',
                        resourceRequestCpu: params.BUILDER_CPU ?: '2',
                        resourceLimitCpu: params.BUILDER_CPU ?: '2',
                        resourceRequestMemory: '1Gi',
                        resourceLimitMemory: '1Gi')
        ]
) {

    node(POD_LABEL) {
        try {
            stage("checkout") {
                git branch: params.BRANCH ?: 'master',
                        url: 'https://github.com/Evolveum/wicket-chartjs.git'
            }
            stage("build") {
                container('maven') {
                    sh """#!/bin/bash -ex
                        # .m2 is mutable and short-term, we just sym-link the settings.xml there.
                        mkdir -p /root/.m2
                        ln -s ../jenkins-nexus/settings.xml /root/.m2/settings.xml

                        mvn -B -ntp clean ${params.SKIP_DEPLOY ? 'install' : 'deploy -DdeployAtEnd=true'}
                    """

                    currentBuild.result = 'SUCCESS'
                }
            }
        } catch (Exception e) {
                     currentBuild.result = 'FAILURE' // error below will not set result for mailer!
                     error 'Marking build as FAILURE because of: ' + e
        } finally {
             try {
                 step([$class: 'Mailer',
                     notifyEveryUnstableBuild: true,
                     recipients: env.DEFAULT_MAIL_RECIPIENT,
                     sendToIndividuals: false])

                 sh """#!/bin/bash -ex
                     if [ "${verbose}" -ge 1 ]; then
                         df -h
                     fi
                 """
             } catch (Exception e) {
                 println 'Could not send email: ' + e
             }
         }
    }




}
